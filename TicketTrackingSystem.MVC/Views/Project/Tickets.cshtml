@model ProjectDto

@using TicketTrackingSystem.Core.Model.Enum
@inject IPermissionService _permissionService
@inject IUserService _userService;
@{
    ViewData["Title"] = "Project";
    var stageName = ViewData["StageName"] as string;
    Dictionary<string, bool> permissionCheckResult;
    bool canView = false;
    bool canAdd = false;
    bool canEdit = false;
    bool canDelete = false;

}

@if (User.Identity.IsAuthenticated)
{

    var user = await _userService.GetUserByClaim(User);
    var userId = user.Id;
    permissionCheckResult = await _permissionService.HasPermissionAsync(userId, PermissionName.ViewTicket.ToString()
                                                                , PermissionName.CreateTicket.ToString()
                                                                , PermissionName.EditTicket.ToString()
                                                                , PermissionName.DeleteTicket.ToString());
    canView = permissionCheckResult[PermissionName.ViewTicket.ToString()];
    canAdd = permissionCheckResult[PermissionName.CreateTicket.ToString()];
    canEdit = permissionCheckResult[PermissionName.EditTicket.ToString()];
    canDelete = permissionCheckResult[PermissionName.DeleteTicket.ToString()];
    <input type="hidden" id="canView" value="@(canView ? "true" : "false")" />
    <input type="hidden" id="canAdd" value="@(canAdd ? "true" : "false" )" />
    <input type="hidden" id="canEdit" value="@(canEdit ? "true" : "false")" />
    <input type="hidden" id="canDelete" value="@(canDelete ? "true" : "false")" />

    <input type="hidden" id="projectId" value="@Model.Id" />
    <input type="hidden" id="inStage" value="@ViewData["StageName"]" />
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h1>Details</h1>
                </div>
                <div class="card-body">
                    <div class="form-group" accesskey="">
                        <label asp-for="Id" class="control-label"></label>
                        <input asp-for="Id" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group" accesskey="">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group" accesskey="">
                        <label asp-for="Description" class="control-label"></label>
                        <input asp-for="Description" class="form-control" disabled="disabled" />
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-action="Index" class="btn btn-outline-primary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
    <hr class="bg-black border-3 border-top border-dark mb-5" />

    <div class="row">
        <div class="col">
            <h2>Project @ViewData["StageName"]</h2>
        </div>
        @if (canAdd)
        {

            <div class="col  text-end">
                <button class="btn btn-primary" id="addButton">Add Ticket</button>
            </div>
        }
        @if (canView && user.UserType.Equals(UserType.Member))
        {
            <div class="col  text-end">
                <button class="btn btn-primary" id="reinitializeBtn">My Tickets</button>
            </div>
        }

    </div>

    if (canView && user.UserType.Equals(UserType.Member))
    {
        <div class="row justify-content-center">
            <div class="col">
                <table id="memberTicketTable" class="table table-striped table-bordered " cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    }


    if (canView && user.UserType.Equals(UserType.Client))
    {
        <div class="row justify-content-center">
            <div class="col">
                <table id="ticketTable" class="table table-striped table-bordered " cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>

    }

    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header" id="modalHeader">
                    <h4 class="modal-title" id="modalTitle">Row information</h4>
                </div>
                <div class="modal-body" id="modelBody">
                </div>
                <div class="modal-footer" id="modal-footer-data">
                </div>
            </div>

        </div>
    </div>
    @section Style {
    <link href="https://cdn.datatables.net/v/bs5/dt-2.1.8/af-2.7.0/b-3.2.0/b-colvis-3.2.0/b-html5-3.2.0/datatables.min.css" rel="stylesheet">

    }
    @section Scripts {
    <script src="https://cdn.datatables.net/v/bs5/dt-2.1.8/af-2.7.0/b-3.2.0/b-colvis-3.2.0/b-html5-3.2.0/datatables.min.js"></script>
    @{
            if (canView)
            {
                <script type="module" src="~/view/project/tickets/ticketTable.js"></script>
                <script type="module" src="~/view/project/tickets/membertickettable/membertickettable.js"></script>

            }
            if (canAdd)
            {
                <script type="module" src="~/view/project/tickets/addTicket.js"></script>

            }
            if (canEdit)
            {
                <script type="module" src="~/view/project/tickets/editTicket.js"></script>
                if (user.UserType.Equals(UserType.Member))
                {
                    <script type="module" src="~/view/project/tickets/membertickettable/editmemberticket.js"></script>
                    <script type="module" src="~/view/project/tickets/membertickettable/assignmemberticket.js"></script>
                }
            }
            if (canDelete)
            {

            }
        }

    }
}